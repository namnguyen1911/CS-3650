// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array array;

    /** Initializes the library. */
    function void init() {
      let array = Array.new(16);
      let array[0] = 1;
      let array[1] = 2;
      let array[2] = 4;
      let array[3] = 8;
      let array[4] = 16;
      let array[5] = 32;
      let array[6] = 64;
      let array[7] = 128;
      let array[8] = 256;
      let array[9] = 512;
      let array[10] = 1024;
      let array[11] = 2048;
      let array[12] = 4096;
      let array[13] = 8192;
      let array[14] = 16384;
      let array[15] = 16384 + 16384;
      return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
      if (x < 0) {
        return -x;
      } 
      else {
        return x;
      }
    }

    /** Returns the product of x and y.
     *  When a Jack compiler detects the multiplication operator '*' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    // algorithm mirrors grade school multiplication algo
    function int multiply(int x, int y) {
      var int sum, shiftedX, count;

      let sum = 0;
      let shiftedX = x;
      let count = 0;

      while(count < 16) {
          if(~((y & array[count])) = 0) {
              let sum = sum + shiftedX;
          }

          let shiftedX = shiftedX * 2;
          let count = count + 1;
      }

      return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */

    // Integer part of x/y, where x and y are natural numbers.
    function int divide(int x, int y) {
      var int q, result;

      if (x < 0) {
        let x = Math.abs(x);
      }

      if (y < 0) {
        let y = Math.abs(y);
      }

      if (y > x) {
        return 0;
      }

      let q = x / (y + y);

      if ((x - (q * (y + y))) < y) {
        let result = q + q;
      }
      else {
        let result = q + q + 1;
      }

      if ((x < 0) = (y < 0)) {
        return result;
      } 
      else {
        return -result;
      }
    }

    /** Returns the integer part of the square root of x. */
    // aka "Floor Sqrt"
    function int sqrt(int x) {
      var int result, count, s;

        let result = 0;
        let count = 7;

        while(~(count < 0)){
            let s = result + array[count];

            if(~(s * s > x) & (s * s > 0)){
                let result = s;
            }
            let count = count - 1;
        }

        return result;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
      if (a < b) {
        return b;
      } 
      else {
        return a;
      }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
      if (a > b) {
        return b;
      } 
      else {
        return a;
      }
    }

    function int modulus(int a, int b) {
      return a - (a / b * b);
    }
}