// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    
    static int keyboard;

    /** Initializes the keyboard. */
    function void init() {
        let keyboard = 24576;
        return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        if(Memory.peek(keyboard) = 0) {
            return 0;
        }
        else {
            return Memory.peek(keyboard);
        }
    }

    /**								
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
        var char keyPressed;

        while(Keyboard.keyPressed() = 0) {}

        let keyPressed = Keyboard.keyPressed();
        
        do Memory.poke(keyPressed, 0);

        do Output.printChar(keyPressed);

        return keyPressed;
    }

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
        var String str;
        var char keyPressed;
        var boolean check;

        let check = true;

        let str = String.new(60);

        do Output.printString(message);

        while(check) {
            let keyPressed = Keyboard.readChar();

            if(~(keyPressed = String.backSpace())) {
                do str.appendChar(keyPressed);
            } 
            else {
                do str.eraseLastChar();
            }

            if(keyPressed = String.newLine()) {
                //do Output.printString(str);
                let check = false;
            }
        }

        return str;
    }   

    /**								
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
        var String str;
        
        let str = Keyboard.readLine(message);
        return str.intValue();
    }
}